<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>阿卡丽的黑心商店</title>
    <link>http://example.com/</link>
    
    <atom:link href="http://example.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>上古时代的宝贝开卖了！</description>
    <pubDate>Wed, 10 Aug 2022 07:44:59 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>RCE</title>
      <link>http://example.com/2022/08/10/RCE/</link>
      <guid>http://example.com/2022/08/10/RCE/</guid>
      <pubDate>Wed, 10 Aug 2022 07:40:03 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;命令执行漏洞（RCE&quot;&gt;&lt;a href=&quot;#命令执行漏洞（RCE&quot; class=&quot;headerlink&quot; title=&quot;命令执行漏洞（RCE)&quot;&gt;&lt;/a&gt;命令执行漏洞（RCE)&lt;/h1&gt;&lt;h2 id=&quot;命令连接符&quot;&gt;&lt;a href=&quot;#命令连接符&quot; class=&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="命令执行漏洞（RCE"><a href="#命令执行漏洞（RCE" class="headerlink" title="命令执行漏洞（RCE)"></a>命令执行漏洞（RCE)</h1><h2 id="命令连接符"><a href="#命令连接符" class="headerlink" title="命令连接符"></a>命令连接符</h2><img src="C:\Users\dell\AppData\Roaming\Typora\typora-user-images\image-20220805140559715.png" alt="image-20220805140559715" style="zoom: 67%;" /><h2 id="常用的cmd命令"><a href="#常用的cmd命令" class="headerlink" title="常用的cmd命令"></a>常用的cmd命令</h2><p>whoami——查看当前用户名<br>ipconfig——查看网卡信息<br>shutdown -s -t 0——关机————（-s：shutdown    -t 0 ：time 0立即关机）<br>net user [username] [password] &#x2F;add——增加一个用户名为username密码为password的新用户<img src="C:\Users\dell\AppData\Roaming\Typora\typora-user-images\image-20220805142829485.png" alt="image-20220805142829485"><br>type [file_name]——查看filename文件内容<br><img src="C:\Users\dell\AppData\Roaming\Typora\typora-user-images\image-20220805143137202.png" alt="image-20220805143137202" style="zoom:67%;" /></p><h2 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h2><h3 id="Command-Injection-防御-low"><a href="#Command-Injection-防御-low" class="headerlink" title="Command Injection 防御 low"></a>Command Injection 防御 low</h3><h4 id="注入点-代码"><a href="#注入点-代码" class="headerlink" title="注入点(代码)"></a>注入点(代码)</h4><p><img src="C:\Users\dell\AppData\Roaming\Typora\typora-user-images\image-20220805144142143.png" alt="image-20220805144142143"></p><h4 id="运行实例"><a href="#运行实例" class="headerlink" title="运行实例"></a>运行实例</h4><img src="C:\Users\dell\AppData\Roaming\Typora\typora-user-images\image-20220805143829190.png" alt="image-20220805143829190" style="zoom:67%;" /><img src="C:\Users\dell\AppData\Roaming\Typora\typora-user-images\image-20220805143911922.png" alt="image-20220805143911922" style="zoom:67%;" /><h3 id="Command-Injection-防御-low-1"><a href="#Command-Injection-防御-low-1" class="headerlink" title="Command Injection 防御 low"></a>Command Injection 防御 low</h3><p>防御命令执行的最高效的方法，就是过滤命令连接符<br>将| ；&amp; || &amp;&amp; 符号替换成空，或判断用户输入这些符号就终止执行</p><h4 id="Command-Injection-防御-medium"><a href="#Command-Injection-防御-medium" class="headerlink" title="Command Injection 防御 medium"></a>Command Injection 防御 medium</h4><p><img src="C:\Users\dell\AppData\Roaming\Typora\typora-user-images\image-20220805145443638.png" alt="image-20220805145443638"><br>str_replace(find,replace,string,count)：字符替换函数。find：规定要查找的值replace：规定替换find中的值string：被搜索的字符串  count：对替换数进行计数的变量<br>array_keys(array,value,strict):返回一个包含所有键名的一个新数组。array：规定数组value：指定健值（可选)strict：可能的值：true  false  是否依赖类型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要替换的元素少于查到到的元素</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$find</span> = <span class="keyword">array</span>(<span class="string">&quot;Hello&quot;</span>,<span class="string">&quot;world&quot;</span>);</span><br><span class="line"><span class="variable">$replace</span> = <span class="keyword">array</span>(<span class="string">&quot;B&quot;</span>);</span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="string">&quot;Hello&quot;</span>,<span class="string">&quot;world&quot;</span>,<span class="string">&quot;!&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">str_replace</span>(<span class="variable">$find</span>,<span class="variable">$replace</span>,<span class="variable">$arr</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line">运行结果</span><br><span class="line"><span class="title function_ invoke__">Array</span> ( [<span class="number">0</span>] =&gt; B [<span class="number">1</span>] =&gt; [<span class="number">2</span>] =&gt; ! )</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$substitutions</span> = <span class="keyword">array</span>( </span><br><span class="line">    <span class="string">&#x27;&amp;&amp;&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;;&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>, </span><br><span class="line">); </span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">array_keys</span>(<span class="variable">$substitutions</span>));</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$substitutions</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">运行结果</span><br><span class="line"><span class="title function_ invoke__">Array</span> ( [<span class="number">0</span>] =&gt; &amp;&amp; [<span class="number">1</span>] =&gt; ; ) <span class="title function_ invoke__">Array</span> ( [&amp;&amp;] =&gt; [;] =&gt; )</span><br></pre></td></tr></table></figure><h3 id="Command-Injection-攻击-medium"><a href="#Command-Injection-攻击-medium" class="headerlink" title="Command Injection 攻击 medium"></a>Command Injection 攻击 medium</h3><p>在medium防御中看到只过滤；和&amp;&amp;，所以使用其他三种即可。<br><img src="C:\Users\dell\AppData\Roaming\Typora\typora-user-images\image-20220805155321480.png" alt="image-20220805155321480" style="zoom:67%;" /><br><img src="C:\Users\dell\AppData\Roaming\Typora\typora-user-images\image-20220805155720842.png" alt="image-20220805155720842" style="zoom:67%;" /></p><h3 id="Command-Injection-防御-high"><a href="#Command-Injection-防御-high" class="headerlink" title="Command Injection 防御 high"></a>Command Injection 防御 high</h3><p><img src="C:\Users\dell\AppData\Roaming\Typora\typora-user-images\image-20220805155807981.png" alt="image-20220805155807981"><br><strong>注意上面‘| ’拦截并非是|，而是|加空格</strong>————代码不规范导致的漏洞</p><h3 id="Command-Injection-攻击-high"><a href="#Command-Injection-攻击-high" class="headerlink" title="Command Injection 攻击 high"></a>Command Injection 攻击 high</h3><img src="C:\Users\dell\AppData\Roaming\Typora\typora-user-images\image-20220805160204332.png" alt="image-20220805160204332" style="zoom:67%;" /><h3 id="Command-Injection-防御-impossible"><a href="#Command-Injection-防御-impossible" class="headerlink" title="Command Injection 防御 impossible"></a>Command Injection 防御 impossible</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;Submit&#x27;</span> ]  ) ) &#123; </span><br><span class="line">    <span class="comment">// Check Anti-CSRF token </span></span><br><span class="line">    <span class="title function_ invoke__">checkToken</span>( <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;user_token&#x27;</span> ], <span class="variable">$_SESSION</span>[ <span class="string">&#x27;session_token&#x27;</span> ], <span class="string">&#x27;index.php&#x27;</span> ); </span><br><span class="line">    <span class="comment">// Get input </span></span><br><span class="line">    <span class="variable">$target</span> = <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;ip&#x27;</span> ];        <span class="comment">//将输入内容赋值给变量$target</span></span><br><span class="line">    <span class="variable">$target</span> = <span class="title function_ invoke__">stripslashes</span>( <span class="variable">$target</span> );      <span class="comment">//去除用户输入的\</span></span><br><span class="line">    <span class="comment">// Split the IP into 4 octects </span></span><br><span class="line">    <span class="variable">$octet</span> = <span class="title function_ invoke__">explode</span>( <span class="string">&quot;.&quot;</span>, <span class="variable">$target</span> );       <span class="comment">//把用户输入的数据根据.分开</span></span><br><span class="line">    <span class="comment">// Check IF each octet is an integer </span></span><br><span class="line">    <span class="keyword">if</span>( ( <span class="title function_ invoke__">is_numeric</span>( <span class="variable">$octet</span>[<span class="number">0</span>] ) ) &amp;&amp; ( <span class="title function_ invoke__">is_numeric</span>( <span class="variable">$octet</span>[<span class="number">1</span>] ) ) &amp;&amp; ( <span class="title function_ invoke__">is_numeric</span>( <span class="variable">$octet</span>[<span class="number">2</span>] ) ) &amp;&amp; ( <span class="title function_ invoke__">is_numeric</span>( <span class="variable">$octet</span>[<span class="number">3</span>] ) ) &amp;&amp; ( <span class="title function_ invoke__">sizeof</span>( <span class="variable">$octet</span> ) == <span class="number">4</span> ) ) <span class="comment">//分别判断分成的四个部分是不是数字，并判断是不是四个数字</span></span><br><span class="line">    &#123; </span><br><span class="line">        <span class="comment">// If all 4 octets are int&#x27;s put the IP back together. </span></span><br><span class="line">        <span class="variable">$target</span> = <span class="variable">$octet</span>[<span class="number">0</span>] . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$octet</span>[<span class="number">1</span>] . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$octet</span>[<span class="number">2</span>] . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$octet</span>[<span class="number">3</span>]; <span class="comment">//后端格式验证，用.拼接起来</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Determine OS and execute the ping command. </span></span><br><span class="line">        <span class="keyword">if</span>( <span class="title function_ invoke__">stristr</span>( <span class="title function_ invoke__">php_uname</span>( <span class="string">&#x27;s&#x27;</span> ), <span class="string">&#x27;Windows NT&#x27;</span> ) ) &#123; </span><br><span class="line">            <span class="comment">// Windows </span></span><br><span class="line">            <span class="variable">$cmd</span> = <span class="title function_ invoke__">shell_exec</span>( <span class="string">&#x27;ping  &#x27;</span> . <span class="variable">$target</span> ); </span><br><span class="line">        &#125;                                                                   </span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="comment">// *nix </span></span><br><span class="line">            <span class="variable">$cmd</span> = <span class="title function_ invoke__">shell_exec</span>( <span class="string">&#x27;ping  -c 4 &#x27;</span> . <span class="variable">$target</span> ); </span><br><span class="line">        &#125; </span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for the end user </span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">&#123;$cmd&#125;</span>&lt;/pre&gt;&quot;</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> &#123; </span><br><span class="line">        <span class="comment">// Ops. Let the user name theres a mistake </span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;ERROR: You have entered an invalid IP.&lt;/pre&gt;&#x27;</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token </span></span><br><span class="line"><span class="title function_ invoke__">generateSessionToken</span>(); </span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="http://example.com/tags/%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2/">网络攻防</category>
      
      
      <comments>http://example.com/2022/08/10/RCE/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hello World</title>
      <link>http://example.com/2022/08/09/hello-world/</link>
      <guid>http://example.com/2022/08/09/hello-world/</guid>
      <pubDate>Tue, 09 Aug 2022 08:06:42 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content:encoded>
      
      
      
      
      <comments>http://example.com/2022/08/09/hello-world/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
